@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudAvatar Variant="Variant.Outlined" Color="Color.Dark">
            <MudImage Src="images/logo.PNG" Alt="logo of Qamber Abbas" />
        </MudAvatar>
        <MudText Typo="Typo.h5" Class="ml-3">Qamber Abbas</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        @* <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" /> *@
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Primary = "#0969da",           // GitHub blue
        Background = "#ffffff",        // Page background
        Surface = "#f6f8fa",           // Card/surface
        AppbarBackground = "#f6f8fa",
        AppbarText = "#1f2328",
        DrawerBackground = "#ffffff",
        DrawerText = "#24292f",
        DrawerIcon = "#57606a",
        TextPrimary = "#1f2328",
        TextSecondary = "#57606a",
        LinesDefault = "#d0d7de",      // Divider color
        Divider = "#d0d7de"
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#58a6ff",
        Background = "#0d1117",
        Surface = "#161b22",
        AppbarBackground = "#161b22",
        AppbarText = "#f0f6fc",
        DrawerBackground = "#0d1117",
        DrawerText = "#c9d1d9",
        DrawerIcon = "#8b949e",
        TextPrimary = "#f0f6fc",
        TextSecondary = "#8b949e",
        LinesDefault = "#30363d",
        Divider = "#21262d"
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}


